{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMQy6lTwHtKKFDSvuHXpJTx"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["1.What is Python, and why is it popular?\n","  \n","   - Python is a popular programming language that's easy to read and write. Think of it as a tool that allows you to give instructions to a computer in a way that's close to plain English.\n","\n","It's popular because:\n","\n",">It's simple to learn: Its clear syntax makes it great for beginners.\n","\n",">It's versatile: You can use it for many different things, from building websites to analyzing data and creating AI.\n","\n",">It has a huge community: There's a massive amount of support, tutorials, and ready-to-use code libraries, so you don't have to start from scratch.\n","\n"," 2.What is an interpreter in Python?\n","\n","   - An interpreter is what runs your code. It reads your Python program line by line and executes it on the spot, without having to compile the whole thing first.\n","\n","3. What are pre-defined keywords in Python?\n","\n","  - These are special, reserved words in Python that have a specific meaning, like if, for, or class. You can't use them for things like variable names.\n","\n"," 4. Can keywords be used as variable names?\n","  \n","  - No, you can't. If you try, Python will give you an error.\n","\n","  5. What is mutability in Python?\n","   \n","   - Mutability means an object can be changed after it's created. If it can't be changed, it's called immutable.\n","\n","   6. Why are lists mutable, but tuples are immutable?\n","\n"," - Lists are mutable because you can add, remove, or change their elements. Tuples are immutable because their contents are fixed once you create them.\n","\n"," 7. What is the difference between \"==\" and \"is\" operators in Python?\n","\n"," - == checks if two things have the same value.\n","\n"," - ​is checks if two things are the exact same object in memory.\n","\n","8. What are logical operators in Python?\n","\n"," - These are words like and, or, and not that you use to combine or modify conditions in your code.\n","\n"," 9. What is type casting in Python?\n","\n"," - Type casting is when you convert one type of data into another, like changing a number written as text into a real number.\n","\n"," 10. What is the difference between implicit and explicit type casting?\n","\n"," - Implicit happens automatically\n","  (e.g., Python turns an integer into a float when you do 5 + 2.5).\n","\n","- ​Explicit is when you manually convert it using a function like int() or str().\n","\n","11. What is the purpose of conditional statements in Python?\n","\n"," - They let your program make decisions. Using if, elif, and else, you can run different code based on whether a condition is true or false.\n","\n"," 12. How does the elif statement work?\n","\n","- It's short for \"else if.\" You use it after an if to check for another condition if the first one was false.\n","\n","13. What is the difference between for and while loops?\n","\n"," - A for loop is best when you know exactly how many times you want to repeat something (like going through every item in a list).\n","\n"," - ​A while loop is better when you want to keep repeating an action until a certain condition is no longer true (like asking for a password until it's correct).\n","\n","14. Describe a scenario where a while loop is more suitable than a for loop.\n","\n"," - Imagine you're building a simple game and you want to keep asking the player for input until they type \"quit.\" You don't know how many turns they'll take, so a while loop is the perfect fit.\n"],"metadata":{"id":"sfz_Ln0taNTc"}},{"cell_type":"markdown","source":["# PRACTICAL QUESTIONS\n","\n","1. Write a Python program to print \"Hello, World!\""],"metadata":{"id":"oY7q8cur4wVM"}},{"cell_type":"code","source":["print(\"Hello, World!\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xL_A3l9Ym65G","executionInfo":{"status":"ok","timestamp":1758112358815,"user_tz":-330,"elapsed":20,"user":{"displayName":"Aaryan Soni","userId":"00515114234534587833"}},"outputId":"6be85745-4d40-4ab6-fc65-73dac945235e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Hello, World!\n"]}]},{"cell_type":"markdown","source":["2. Write a Python program that displays your name and age."],"metadata":{"id":"DyJxIcUU5x8u"}},{"cell_type":"code","source":["name = \"ADI SINGH\"\n","age = 22\n","print(\"My name is\", name, \"and I am\", age,\"years old.\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5ypg9DXyrRF5","executionInfo":{"status":"ok","timestamp":1758112725891,"user_tz":-330,"elapsed":19,"user":{"displayName":"Aaryan Soni","userId":"00515114234534587833"}},"outputId":"c99e18a7-94e1-40bc-94f7-c4e65d4d73a0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["My name is ADI SINGH and I am 22 years old.\n"]}]},{"cell_type":"markdown","source":["3. Write code to print all the pre-defined keywords in Python using the keyword library."],"metadata":{"id":"IPWpiUug56rg"}},{"cell_type":"code","source":["import keyword\n","print(keyword.kwlist)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8HhbSSDUr24H","executionInfo":{"status":"ok","timestamp":1758112823855,"user_tz":-330,"elapsed":20,"user":{"displayName":"Aaryan Soni","userId":"00515114234534587833"}},"outputId":"13d75a2a-c058-41c2-dfe2-36b002ca69e0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['False', 'None', 'True', 'and', 'as', 'assert', 'async', 'await', 'break', 'class', 'continue', 'def', 'del', 'elif', 'else', 'except', 'finally', 'for', 'from', 'global', 'if', 'import', 'in', 'is', 'lambda', 'nonlocal', 'not', 'or', 'pass', 'raise', 'return', 'try', 'while', 'with', 'yield']\n"]}]},{"cell_type":"markdown","source":["4. Write a program that checks if a given word is a Python keyword."],"metadata":{"id":"Oy05qvej6LSm"}},{"cell_type":"code","source":["import keyword\n","\n","word = \"while\"\n","if keyword.iskeyword(word):\n","    print(f\"'{word}' is a Python keyword.\")\n","else:\n","    print(f\"'{word}' is not a Python keyword.\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BwPxuR50sSHO","executionInfo":{"status":"ok","timestamp":1758113036887,"user_tz":-330,"elapsed":26,"user":{"displayName":"Aaryan Soni","userId":"00515114234534587833"}},"outputId":"fb30dfe4-3972-4496-c091-528e439f694c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["'while' is a Python keyword.\n"]}]},{"cell_type":"markdown","source":["5. Create a list and tuple in Python, and demonstrate how attempting to change an element works differently for each."],"metadata":{"id":"jBcuVhPH6T9D"}},{"cell_type":"code","source":["# A list is mutable (can be changed)\n","my_list = [1, 2, 3]\n","print(\"Original list:\", my_list)\n","my_list[0] = 10\n","print(\"Modified list:\", my_list)\n","\n","# A tuple is immutable (cannot be changed)\n","my_tuple = (1, 2, 3)\n","print(\"\\nOriginal tuple:\", my_tuple)\n","try:\n","    my_tuple[0] = 10\n","except TypeError as e:\n","    print(\"Error:\",e)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JcVLbW3CtM2i","executionInfo":{"status":"ok","timestamp":1758113274391,"user_tz":-330,"elapsed":24,"user":{"displayName":"Aaryan Soni","userId":"00515114234534587833"}},"outputId":"e8e72e06-8a49-42e9-9879-579a3776e49c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Original list: [1, 2, 3]\n","Modified list: [10, 2, 3]\n","\n","Original tuple: (1, 2, 3)\n","Error: 'tuple' object does not support item assignment\n"]}]},{"cell_type":"markdown","source":["6. Write a function to demonstrate the behavior of mutable and immutable arguments."],"metadata":{"id":"2ToTcViT6kL7"}},{"cell_type":"code","source":["# Immutable argument (integer)\n","def add_one_to_int(x):\n","    print(\"Inside function (before change):\", x)\n","    x = x + 1\n","    print(\"Inside function (after change):\", x)\n","\n","my_number = 5\n","print(\"Outside function (before call):\", my_number)\n","add_one_to_int(my_number)\n","print(\"Outside function (after call):\", my_number)\n","\n","# The original variable is unchanged\n","\n","print(\"-\" * 20)\n","\n","# Mutable argument (list)\n","def append_to_list(my_list):\n","    print(\"Inside function (before change):\", my_list)\n","    my_list.append(4)\n","    print(\"Inside function (after change):\", my_list)\n","\n","my_list = [1, 2, 3]\n","print(\"Outside function (before call):\", my_list)\n","append_to_list(my_list)\n","print(\"Outside function (after call):\", my_list) # The original list is changed"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NoMViZkduMgX","executionInfo":{"status":"ok","timestamp":1758113546590,"user_tz":-330,"elapsed":60,"user":{"displayName":"Aaryan Soni","userId":"00515114234534587833"}},"outputId":"66676c48-39dd-487c-81e4-5a7790166fe4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Outside function (before call): 5\n","Inside function (before change): 5\n","Inside function (after change): 6\n","Outside function (after call): 5\n","--------------------\n","Outside function (before call): [1, 2, 3]\n","Inside function (before change): [1, 2, 3]\n","Inside function (after change): [1, 2, 3, 4]\n","Outside function (after call): [1, 2, 3, 4]\n"]}]},{"cell_type":"markdown","source":["7. Write a program that performs basic arithmetic operations on two user-input numbers."],"metadata":{"id":"Mhy9PBd86xgb"}},{"cell_type":"code","source":["num1 = float(input(\"Enter the first number: \"))\n","num2 = float(input(\"Enter the second number: \"))\n","\n","print(f\"{num1} + {num2} = {num1 + num2}\")\n","print(f\"{num1} - {num2} = {num1 - num2}\")\n","print(f\"{num1} * {num2} = {num1 * num2}\")\n","print(f\"{num1} / {num2} ={num1/num2}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lo9mlaslu9hM","executionInfo":{"status":"ok","timestamp":1758113985258,"user_tz":-330,"elapsed":20411,"user":{"displayName":"Aaryan Soni","userId":"00515114234534587833"}},"outputId":"84ed1067-4245-4481-9517-48762a44bde4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter the first number: 2\n","Enter the second number: 4\n","2.0 + 4.0 = 6.0\n","2.0 - 4.0 = -2.0\n","2.0 * 4.0 = 8.0\n","2.0 / 4.0 =0.5\n"]}]},{"cell_type":"markdown","source":["8. Write a program to demonstrate the use of logical operators."],"metadata":{"id":"D1lA9CPS6-In"}},{"cell_type":"code","source":["x = 10\n","y = 20\n","z = 30\n","\n","# Using 'and' operator\n","print(\"x < y and y < z is\", x < y and y < z)\n","\n","# Using 'or' operator\n","print(\"x > y or z > y is\", x < y or z > y)\n","\n","# Using 'not' operator\n","print(\"not(x == y) is\",not(x==y))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7QzGWQJTwEVw","executionInfo":{"status":"ok","timestamp":1758114296810,"user_tz":-330,"elapsed":22,"user":{"displayName":"Aaryan Soni","userId":"00515114234534587833"}},"outputId":"d750de31-4e13-440d-d783-92d77687269b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["x < y and y < z is True\n","x > y or z > y is True\n","not(x == y) is True\n"]}]},{"cell_type":"markdown","source":["9. Write a Python program to convert user input from string to integer, float, and boolean types."],"metadata":{"id":"m1VtJT5R7JIC"}},{"cell_type":"code","source":["# User input is always a string by default\n","user_input_string = input(\"Enter a value: \")\n","print(\"Original type:\", type(user_input_string))\n","\n","# Convert to integer\n","try:\n","    int_value = int(user_input_string)\n","    print(f\"Integer conversion: {int_value} (Type: {type(int_value)})\")\n","except ValueError:\n","    print(\"Cannot convert to integer.\")\n","\n","# Convert to float\n","try:\n","    float_value = float(user_input_string)\n","    print(f\"Float conversion: {float_value} (Type: {type(float_value)})\")\n","except ValueError:\n","    print(\"Cannot convert to float.\")\n","\n","# Convert to boolean (using a simple check)\n","boolean_value = user_input_string.lower() == 'true'\n","print(f\"Boolean conversion: {boolean_value} (Type: {type(boolean_value)})\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PHwQyF7Hx6Ud","executionInfo":{"status":"ok","timestamp":1758114456135,"user_tz":-330,"elapsed":61739,"user":{"displayName":"Aaryan Soni","userId":"00515114234534587833"}},"outputId":"e2cb7198-28f6-428c-dcea-66fb76b9b455"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter a value: 23\n","Original type: <class 'str'>\n","Integer conversion: 23 (Type: <class 'int'>)\n","Float conversion: 23.0 (Type: <class 'float'>)\n","Boolean conversion: False (Type: <class 'bool'>)\n"]}]},{"cell_type":"markdown","source":["10. Write code to demonstrate type casting with list elements."],"metadata":{"id":"C1LTNBTw7WQD"}},{"cell_type":"code","source":["string_list = [\"1\", \"2.5\", \"3\"]\n","print(\"Original list (strings):\", string_list)\n","\n","# Cast to a list of integers\n","int_list = [int(x) for x in string_list if x.isdigit()]\n","print(\"Casted to integers:\", int_list)\n","\n","# Cast to a list of floats\n","float_list = [float(x) for x in string_list]\n","print(\"Casted to floats:\",float_list)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JXdHVeHPy8lt","executionInfo":{"status":"ok","timestamp":1758114728460,"user_tz":-330,"elapsed":49,"user":{"displayName":"Aaryan Soni","userId":"00515114234534587833"}},"outputId":"4e839f4c-d21c-49c4-cc91-dee9854acdee"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Original list (strings): ['1', '2.5', '3']\n","Casted to integers: [1, 3]\n","Casted to floats: [1.0, 2.5, 3.0]\n"]}]},{"cell_type":"markdown","source":["11. Write a program that checks if a number is positive, negative, or zero"],"metadata":{"id":"vI5iEIXv7eo1"}},{"cell_type":"code","source":["number = float(input(\"Enter a number: \"))\n","\n","if number > 0:\n","    print(\"The number is positive.\")\n","elif number < 0:\n","    print(\"The number is negative.\")\n","else:\n","    print(\"The number is zero.\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GW5jQtOY0S-3","executionInfo":{"status":"ok","timestamp":1758115085358,"user_tz":-330,"elapsed":11273,"user":{"displayName":"Aaryan Soni","userId":"00515114234534587833"}},"outputId":"e7c864d2-fae4-4030-ae90-b962c2d9a071"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter a number: 90\n","The number is positive.\n"]}]},{"cell_type":"markdown","source":["12. Write a for loop to print numbers from 1 to 10."],"metadata":{"id":"R7LggazV7oW0"}},{"cell_type":"code","source":["for i in range(1, 11):\n","    print(i)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kAeTx7Ag017z","executionInfo":{"status":"ok","timestamp":1758115147331,"user_tz":-330,"elapsed":58,"user":{"displayName":"Aaryan Soni","userId":"00515114234534587833"}},"outputId":"868bb5a7-8e12-4809-cd95-c976281746af"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1\n","2\n","3\n","4\n","5\n","6\n","7\n","8\n","9\n","10\n"]}]},{"cell_type":"markdown","source":["13. Write a Python program to find the sum of all even numbers between 1 and 50."],"metadata":{"id":"dH0dSa6o7wyx"}},{"cell_type":"code","source":["total_sum = 0\n","for number in range(1, 51):\n","    if number % 2 == 0:\n","        total_sum += number\n","\n","print(\"The sum of all even numbers between 1 and 50 is:\",total_sum)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"D8ViPek-1GXh","executionInfo":{"status":"ok","timestamp":1758115241444,"user_tz":-330,"elapsed":22,"user":{"displayName":"Aaryan Soni","userId":"00515114234534587833"}},"outputId":"5c13df82-212d-48b0-866e-02ffa95e4d5d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The sum of all even numbers between 1 and 50 is: 650\n"]}]},{"cell_type":"markdown","source":["14. Write a program to reverse a string using a while loop."],"metadata":{"id":"EtiCKq-Q8HVe"}},{"cell_type":"code","source":["my_string = \"Python\"\n","reversed_string = \"\"\n","index = len(my_string) - 1\n","\n","while index >= 0:\n","    reversed_string += my_string[index]\n","    index -= 1\n","\n","print(\"Original string:\", my_string)\n","print(\"Reversed string:\", reversed_string)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"A-8cA4Zj1n17","executionInfo":{"status":"ok","timestamp":1758115517976,"user_tz":-330,"elapsed":52,"user":{"displayName":"Aaryan Soni","userId":"00515114234534587833"}},"outputId":"0efdeb1d-f64a-4875-e529-7a9852c9cb0a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Original string: Python\n","Reversed string: nohtyP\n"]}]},{"cell_type":"markdown","source":["15. Write a Python program to calculate the factorial of a number provided by the user using a while loop."],"metadata":{"id":"45xuMmQy8PBS"}},{"cell_type":"code","source":["number = int(input(\"Enter a non-negative integer: \"))\n","\n","if number < 0:\n","    print(\"Factorial is not defined for negative numbers.\")\n","else:\n","    factorial = 1\n","    i = 1\n","    while i <= number:\n","        factorial *= i\n","        i += 1\n","    print(f\"The factorial of {number} is{factorial}.\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZqPRZuts2RxL","executionInfo":{"status":"ok","timestamp":1758116068496,"user_tz":-330,"elapsed":4917,"user":{"displayName":"Aaryan Soni","userId":"00515114234534587833"}},"outputId":"9ffe0767-5797-4dac-b4ad-6171509816d8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter a non-negative integer: 5\n","The factorial of 5 is120.\n"]}]},{"cell_type":"markdown","source":[],"metadata":{"id":"NIsVzq0k8a1o"}}]}